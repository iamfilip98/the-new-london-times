name: 🧪 Comprehensive Test Suite

on:
  push:
    branches: [ main, develop, 'feat/**', 'fix/**' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual trigger

# Cancel in-progress runs for same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Visual Regression Tests
  visual-regression:
    name: 📸 Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run visual regression tests
        run: npx playwright test tests/visual --reporter=list,html,json
        continue-on-error: true

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: 📸 Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-screenshots
          path: test-results/visual/**/*.png
          retention-days: 30

  # Job 2: E2E Tests (Matrix across browsers)
  e2e-tests:
    name: 🎯 E2E Tests - ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium-desktop, firefox-desktop, webkit-desktop, mobile-chrome, mobile-safari]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run E2E tests
        run: npx playwright test tests/e2e --project=${{ matrix.browser }} --reporter=list,html,json
        continue-on-error: true

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 3: Accessibility Tests
  accessibility:
    name: ♿ Accessibility (WCAG 2.1)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: 🧪 Run accessibility tests
        run: npx playwright test tests/accessibility --project=chromium-desktop --reporter=list,html,json
        continue-on-error: true

      - name: 📊 Upload accessibility report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 4: Performance Tests
  performance:
    name: ⚡ Performance & Lighthouse
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: 🧪 Run performance tests
        run: npx playwright test tests/performance --project=chromium-desktop --reporter=list,html,json
        continue-on-error: true

      - name: 📊 Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 5: API Tests
  api-tests:
    name: 🔌 API Endpoint Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install

      - name: 🧪 Run API tests
        run: npx playwright test tests/api --reporter=list,html,json
        env:
          API_BASE_URL: https://the-new-london-times-aisx09a52-filips-projects-cf39d09c.vercel.app
        continue-on-error: true

      - name: 📊 Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 6: Generate Test Report
  test-report:
    name: 📋 Generate Test Report
    runs-on: ubuntu-latest
    needs: [visual-regression, e2e-tests, accessibility, performance, api-tests]
    if: always()

    steps:
      - name: 📥 Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-test-results

      - name: 📊 Create summary report
        run: |
          echo "# 🧪 Test Suite Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Jobs Status" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Regression: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance: ${{ needs.performance.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- API Tests: ${{ needs.api-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📸 Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Test results, screenshots, and reports are available in the artifacts section." >> $GITHUB_STEP_SUMMARY

      - name: 📦 Upload combined results
        uses: actions/upload-artifact@v4
        with:
          name: all-test-results-combined
          path: all-test-results/
          retention-days: 30

  # Job 7: Comment on PR (if PR)
  pr-comment:
    name: 💬 Comment Test Results on PR
    runs-on: ubuntu-latest
    needs: [visual-regression, e2e-tests, accessibility, performance, api-tests]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write

    steps:
      - name: 💬 Create PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const visualStatus = '${{ needs.visual-regression.result }}';
            const e2eStatus = '${{ needs.e2e-tests.result }}';
            const a11yStatus = '${{ needs.accessibility.result }}';
            const perfStatus = '${{ needs.performance.result }}';
            const apiStatus = '${{ needs.api-tests.result }}';

            const statusEmoji = (status) => {
              if (status === 'success') return '✅';
              if (status === 'failure') return '❌';
              return '⚠️';
            };

            const body = `## 🧪 Test Suite Results

            | Test Category | Status |
            |--------------|--------|
            | 📸 Visual Regression | ${statusEmoji(visualStatus)} ${visualStatus} |
            | 🎯 E2E Tests | ${statusEmoji(e2eStatus)} ${e2eStatus} |
            | ♿ Accessibility | ${statusEmoji(a11yStatus)} ${a11yStatus} |
            | ⚡ Performance | ${statusEmoji(perfStatus)} ${perfStatus} |
            | 🔌 API Tests | ${statusEmoji(apiStatus)} ${apiStatus} |

            ### 📊 Detailed Reports
            Check the **Actions** tab for detailed test reports, screenshots, and videos.

            ---
            🤖 *Automated test results from GitHub Actions*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
